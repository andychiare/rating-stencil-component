import './stencil.core';
/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */

import './stencil.core';

declare global {
  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {}
  }
  namespace JSXElements {}

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;
    componentOnReady(done: (ele?: this) => void): void;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}
}


declare global {

  namespace StencilComponents {
    interface MyRating {
      'maxValue': number;
      'value': number;
    }
  }

  interface HTMLMyRatingElement extends StencilComponents.MyRating, HTMLStencilElement {}

  var HTMLMyRatingElement: {
    prototype: HTMLMyRatingElement;
    new (): HTMLMyRatingElement;
  };
  interface HTMLElementTagNameMap {
    'my-rating': HTMLMyRatingElement;
  }
  interface ElementTagNameMap {
    'my-rating': HTMLMyRatingElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'my-rating': JSXElements.MyRatingAttributes;
    }
  }
  namespace JSXElements {
    export interface MyRatingAttributes extends HTMLAttributes {
      'maxValue'?: number;
      'onOnRatingUpdated'?: (event: CustomEvent) => void;
      'value'?: number;
    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }
